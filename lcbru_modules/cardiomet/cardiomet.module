<?php

const CARDIOMET_PREMISSION_PRINT_LABELS = 'CARDIOMET print labels';

function cardiomet_permission() {
  return array(
    CARDIOMET_PREMISSION_PRINT_LABELS => array (
      'title' => t(CARDIOMET_PREMISSION_PRINT_LABELS), 
      'description' => t(CARDIOMET_PREMISSION_PRINT_LABELS),
    ),
  );
}

function cardiomet_civicrm_validateForm( $formName, &$fields, &$files, &$form, &$errors ) {

    $contactFormBeginning = 'CRM_Case_Form_';

    if (lcbru_string_starts_with($formName, $contactFormBeginning)) {
        foreach ($fields as $key => $field) {
            if (lcbru_string_starts_with($key, lcbru_get_custom_field_id_name('CIVI_FIELD_CARDIOMET_ID') . '_')) {
                if (_cardiomet_isInvalidCardiometId($field)) {
                    $errors[$key] = ts(CIVI_FIELD_CARDIOMET_ID . " is not valid.  Should be 'CarPtnnnnnnnnX' where nnnnnnnn is an 8 digit number and X is a check character");
                }
            }
        }
    }
    return;
}


function _cardiomet_isInvalidCardiometId($value) {
  $idGenerator = new IdGenerator('CarPt');
  return !$idGenerator->validate($value);
}


function cardiomet_lcbru_populateStudyIds(array &$studyIds) {
    $studyIds[] = 'CIVI_FIELD_CARDIOMET_ID';
}


function cardiomet_lcbru_getStudyIdFieldName($studyId) {
    if (!_predict_isInvalidPredictId($studyId)) {
        return 'CIVI_FIELD_CARDIOMET_ID';   
    }
}


function cardiomet_label_printer_populateDefinitions(array &$definitions) {
  $definitions['CARDIOMET Pack'] = array(
      'name' => 'CARDIOMET Pack',
      'permission' => CARDIOMET_PREMISSION_PRINT_LABELS,
      'participant_id_generators' => array(
        'study_id' => new IdGenerator('CarPt'),
        ),
      'labels' => array(
        'Brown Aortic Rest' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 2,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'Aortic Rest 4.9ml (Serum - BROWN)'
            )
          ),
        'Orange Aortic Rest' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 1,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'Aortic Rest 9ml (EDTA - ORANGE/RED)'
            )
          ),
        'Brown CS Rest' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 2,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'CS Rest 4.9ml (Serum - BROWN)'
            )
          ),
        'Orange CS Rest' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 1,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'CS Rest 9ml (EDTA - ORANGE/RED)'
            )
          ),
        'Purple CS Rest' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 1,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'CS Rest 2.7ml (EDTA - PURPLE)'
            )
          ),
        'Brown Aortic Stress' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 2,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'Aortic Stress 4.9ml (Serum - BROWN)'
            )
          ),
        'Orange Aortic Stress' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 1,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'Aortic Stress 9ml (EDTA - ORANGE/RED)'
            )
          ),
        'Brown CS Stress' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 2,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'CS Stress 4.9ml (Serum - BROWN)'
            )
          ),
        'Orange CS Stress' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 1,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'CS Stress 9ml (EDTA - ORANGE/RED)'
            )
          ),
        'Brown Visit 2' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 2,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => '2nd Visit 4.9ml (Serum - BROWN)'
            )
          ),
        'Orange Visit 2' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 1,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => '2nd Visit 9ml (EDTA - ORANGE/RED)'
            )
          ),
        'Purple Visit 2' => array(
          'id_generator' => new IdGenerator('CarSa'),
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE_AND_MESSAGE,
          'id_count' => 1,
          'labels_per_id' => 1,
          'fields' => array(
            '{MESSAGE_PLACEHOLDER}' => 'Visit 2 2.7ml (EDTA - PURPLE)'
            )
          ),
        'Participant Label' => array(
          'participant_id' => 'study_id',
          'printer' => LabelPrinter::PRINTER_TMF_SAMPLE,
          'template' => LabelPrinter::LABEL_SAMPLE,
          'id_count' => 1,
          'labels_per_id' => 8
          ),
        'Visit 1 Aortic Rest Bag' => array(
          'participant_id' => 'study_id',
          'printer' => LabelPrinter::PRINTER_TMF_BAG,
          'template' => LabelPrinter::LABEL_BAG_CARDIOMET,
          'study_name' => 'CARDIOMET V1 Aortic Rest',
          'id_count' => 1,
          'labels_per_id' => 1
          ),
        'Visit 1 CS Rest Bag' => array(
          'participant_id' => 'study_id',
          'printer' => LabelPrinter::PRINTER_TMF_BAG,
          'template' => LabelPrinter::LABEL_BAG_CARDIOMET_WITH_PURPLE,
          'study_name' => 'CARDIOMET V1 CS Rest',
          'id_count' => 1,
          'labels_per_id' => 1
          ),
        'Visit 1 Aortic Stress Bag' => array(
          'participant_id' => 'study_id',
          'printer' => LabelPrinter::PRINTER_TMF_BAG,
          'template' => LabelPrinter::LABEL_BAG_CARDIOMET,
          'study_name' => 'CARDIOMET V1 Aortic Stress',
          'id_count' => 1,
          'labels_per_id' => 1
          ),
        'Visit 1 CS Stress Bag' => array(
          'participant_id' => 'study_id',
          'printer' => LabelPrinter::PRINTER_TMF_BAG,
          'template' => LabelPrinter::LABEL_BAG_CARDIOMET,
          'study_name' => 'CARDIOMET V1 CS Stress',
          'id_count' => 1,
          'labels_per_id' => 1
          ),
        'Visit 2 Bag' => array(
          'participant_id' => 'study_id',
          'printer' => LabelPrinter::PRINTER_TMF_BAG,
          'template' => LabelPrinter::LABEL_BAG_CARDIOMET_WITH_PURPLE,
          'study_name' => 'CARDIOMET V2',
          'id_count' => 1,
          'labels_per_id' => 1
          ),
        ),
    );
}


function cardiomet_participant_importer_populateDefinitions() {
    return array(
        'Cardiomet REDCap' => array(
            'query' => "
                SELECT *
                FROM (
                    SELECT
                        MAX(COALESCE(es.ts, 0)) AS last_update,
                        s.record CIVI_FIELD_CARDIOMET_ID,
                        s.record,
                        s.project_id,
                        s.start_date,
                        CASE s.gender
                                WHEN 0 THEN 'Female'
                                WHEN 1 THEN 'male'
                             END AS gender,
                        s.birth_date,
                        s.UHL_S_number,
                        s.NHS_number,
                        s.first_name,
                        s.last_name,
                        s.supplemental_address_1,
                        s.street_address,
                        s.supplemental_address_2,
                        s.city,
                        s.postal_code,
                        s.phone,
                        s.email,
                         CASE
                             WHEN COALESCE(study_status, '1') = '1' THEN 'recruited'
                             WHEN non_complete_rsn = '5' THEN 'withdrawn'
                             ELSE 'excluded'
                         END AS case_status
                     FROM (
                        SELECT
                            rd.record,
                            rd.project_id,
                            GROUP_CONCAT(CASE WHEN field_name = 's_no' THEN VALUE ELSE NULL END) AS uhl_s_number,
                            GROUP_CONCAT(CASE WHEN field_name = 'research_appt_date' THEN VALUE ELSE NULL END) AS start_date,
                            GROUP_CONCAT(CASE WHEN field_name = 'gender' THEN VALUE ELSE NULL END) AS gender,
                            GROUP_CONCAT(CASE WHEN field_name = 'dob' THEN VALUE ELSE NULL END) AS birth_date,
                            GROUP_CONCAT(CASE WHEN field_name = 'nhs_no' THEN VALUE ELSE NULL END) AS NHS_number,
                            GROUP_CONCAT(CASE WHEN field_name = 'first_name' THEN VALUE ELSE NULL END) AS first_name,
                            GROUP_CONCAT(CASE WHEN field_name = 'last_name' THEN VALUE ELSE NULL END) AS last_name,
                            GROUP_CONCAT(CASE WHEN field_name = 'add_1' THEN VALUE ELSE NULL END) AS supplemental_address_1,
                            GROUP_CONCAT(CASE WHEN field_name = 'add_2' THEN VALUE ELSE NULL END) AS street_address,
                            GROUP_CONCAT(CASE WHEN field_name = 'add_3' THEN VALUE ELSE NULL END) AS supplemental_address_2,
                            GROUP_CONCAT(CASE WHEN field_name = 'add_4' THEN VALUE ELSE NULL END) AS city,
                            GROUP_CONCAT(CASE WHEN field_name = 'postcode' THEN VALUE ELSE NULL END) AS postal_code,
                            GROUP_CONCAT(CASE WHEN field_name = 'tel_no' THEN VALUE ELSE NULL END) AS phone,
                            GROUP_CONCAT(CASE WHEN field_name = 'email_add' THEN VALUE ELSE NULL END) AS email
                        FROM    redcap_data rd
                        WHERE rd.project_id = 64
                        GROUP BY rd.record, rd.project_id
                    ) s
                    LEFT JOIN redcap_log_event es
                        ON es.project_id = s.project_id
                        AND es.pk = s.record
                        AND es.`event` NOT IN ('DATA_EXPORT', 'DELETE')
                        # Ignore events caused by the data import from
                        # the mobile app
                        AND es.page NOT IN ('DataImportController:index')
                     LEFT JOIN (
                        SELECT
                            rd.record,
                            rd.project_id,
                            GROUP_CONCAT(CASE WHEN field_name = 'study_status' THEN VALUE ELSE NULL END) AS study_status,
                            GROUP_CONCAT(CASE WHEN field_name = 'non_complete_rsn' THEN VALUE ELSE NULL END) AS non_complete_rsn
                        FROM    redcap_data rd
                        WHERE rd.project_id = 67
                        GROUP BY rd.record, rd.project_id
                     ) q ON q.record = s.record
                    LEFT JOIN redcap_log_event eq
                        ON eq.project_id = q.project_id
                        AND eq.pk = q.record
                        AND eq.`event` NOT IN ('DATA_EXPORT', 'DELETE')
                        # Ignore events caused by the data import from
                        # the mobile app
                        AND eq.page NOT IN ('DataImportController:index')
                    GROUP BY s.record
                ) x
                WHERE LENGTH(TRIM(COALESCE(CIVI_FIELD_CARDIOMET_ID, ''))) > 0
                ",
             'case_type_name' => CIVI_CASETYPE_CARDIOMET,
             'add_pmi' => 0
        )
    );
}
